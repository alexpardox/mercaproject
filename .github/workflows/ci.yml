name: CI/CD Pipeline

# Trigger the workflow on push and pull requests
on:
  push:
    branches: [ develop, main, master ]
  pull_request:
    branches: [ develop, main, master ]

# Permisos necesarios para que las acciones funcionen correctamente
permissions:
  contents: read
  actions: read
  checks: write
  statuses: write
  pull-requests: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [17]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Install dependencies
      run: mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
      
    - name: Run tests
      run: mvn test -Dtest="SimpleTest"
      
    - name: Test Results Summary
      if: always()
      run: |
        echo "🧪 Test Results:"
        if [ -f target/surefire-reports/*.xml ]; then
          echo "✅ Test reports generated successfully"
          echo "📊 Check target/surefire-reports/ for detailed results"
        else
          echo "⚠️  No test reports found"
        fi
        echo "📋 Maven test completed"
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: target/surefire-reports/

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build application
      run: mvn clean package -DskipTests
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jar-artifact
        path: target/*.jar
